{"version":3,"file":"static/webpack/static/development/pages/animation.js.a8ce3e5a3a5d940f1937.hot-update.js","sources":["webpack:///./components/MainLayout.js"],"sourcesContent":["import React from \"react\";\n\nimport { Global, css } from \"@emotion/core\";\nimport { hydrate } from \"emotion\";\nimport Header from \"../components/Header\";\n// Adds server generated styles to emotion cache.\n// '__NEXT_DATA__.ids' is set in '_document.js'\nif (typeof window !== \"undefined\") {\n  hydrate(window.__NEXT_DATA__.ids);\n}\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/main.css\";\n\nexport default Component => {\n  return class App extends React.Component {\n    static displayName = \"MainLayout(Component)\";\n\n    static async getInitialProps(ctx) {\n      const props = {};\n      if (Component.getInitialProps) {\n        Object.assign(props, await Component.getInitialProps(ctx));\n      }\n      if (!process.browser) {\n        try {\n          // Run all GraphQL queries\n          await props;\n        } catch (error) {\n          // Prevent Apollo Client GraphQL errors from crashing SSR.\n          // Handle them in components via the data.error prop:\n          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n          console.error(\"Error while running `getDataFromTree`\", error);\n        }\n      }\n\n      return { ...props };\n    }\n    render() {\n      return (\n        <React.Fragment>\n          <Global\n          // styles={css`\n          //   * {\n          //     color: blue !important;\n          //     font-size: 50px !important;\n          //     text-align: center !important;\n          //   }\n          // `}\n          />\n\n          <Header />\n          <Component {...this.props} />\n        </React.Fragment>\n      );\n    }\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAuBA;AAIA;AACA;AACA;AACA;AACA;AACA;AAPA;AAcA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAyCA;;;;A","sourceRoot":""}