{"version":3,"file":"static/webpack/static/development/pages/index.js.e8339c58d3a7153a7400.hot-update.js","sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./pages/index.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import MainLayout from \"../components/MainLayout\";\n\nimport React, { Component } from \"react\";\nimport fetch from \"node-fetch\";\n\nexport default class Index extends Component {\n  static async getInitialProps() {\n    const data = await fetch(\"https://jsonplaceholder.typicode.com/todos/1\");\n    return { data };\n  }\n  render() {\n    console.log(this.props);\n    return <MainLayout>Loading data from {process.env.BACKEND_URL}</MainLayout>;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AANA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAJA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}